buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }

        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'

apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

version = mod_version
group = 'com.modularwarfare'
archivesBaseName = 'modularwarfare'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    embed
    compile.extendsFrom(embed)
}

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'
            property 'fml.coreMods.load', 'com.modularwarfare.mixin.MixinCore'
            property 'mixin.debug', 'true'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'
        }
    }
}


repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://repo.spongepowered.org/maven"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'

    embed('org.spongepowered:mixin:0.8-SNAPSHOT') {
        exclude module: 'guava'
        exclude module: 'commons-io'
        exclude module: 'gson'
    }

    // https://mvnrepository.com/artifact/net.lingala.zip4j/zip4j
    embed 'net.lingala.zip4j:zip4j:1.2.4'

    compile fileTree(dir: 'libs', include: '*.jar')
    compileOnly fileTree(dir: 'optifine', include: '*.jar')
}


idea { module { inheritOutputDirs = true } }

mixin {
    add sourceSets.main, "mixins.modularwarfare.refmap.json"
    defaultObfuscationEnv "searge"
}
sourceSets {
    main {
        output.resourcesDir = output.classesDir
        ext.refMap = "mixins.modularwarfare.refmap.json"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

jar {
    doFirst {
        from {
            configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
    manifest {
        attributes([
                "Built-By": "Protoxy",
                "Specification-Title": "modularwarfare",
                "Specification-Vendor": "modularwarfare",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"protoxy",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "FMLCorePluginContainsFMLMod": true,
                "FMLCorePlugin": "com.modularwarfare.mixin.MixinCore",
                "ForceLoadAsMod": true,
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "MixinConfigs": "mixins.modularwarfare.json",
        ])
    }
}